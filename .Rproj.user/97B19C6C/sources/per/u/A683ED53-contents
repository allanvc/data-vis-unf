# 1 PACKAGES
libs <- c(
  "tidyverse", "comtradr", "giscoR",
  "sf", "sfheaders", "CoordinateCleaner"
)

installed_libs <- libs %in% rownames(
  installed.packages()
)

if(any(installed_libs == F)){
  install.packages(
    libs[!installed_libs],
    dependencies = T
  )
}

invisible(lapply(
  libs, library,
  character.only = T
))

# 2. GET TRADE DATA
comtradr::set_primary_comtrade_key("aa4619cdae804bf88ed1cd08d89238e4")

wheat_exports <- comtradr::ct_get_data(
  commodity_code = "1001",
  flow_direction = "export",
  reporter = "UKR",
  partner = "all_countries",
  start_date = 2022,
  end_date = 2022
)

wheat_df <- wheat_exports |>
  dplyr::select(
    partnerISO,
    qty
  )

# 3. FETCH CAPITALS
data(countryref)

capitals <- countryref |>
  dplyr::filter(
    !is.na(capital)
  ) |>
  dplyr::group_by(
    iso3, capital
  ) |>
  dplyr::summarise_at(
    vars(
      capital.lon,
      capital.lat
    ), max
  ) |>
  dplyr::rename(
    long = capital.lon,
    lat = capital.lat
  )

# 4. STARTING/ENDING POINTS
end_coords <- wheat_df |>
  dplyr::left_join(
    capitals,
    by = c("partnerISO" = "iso3")
  ) |>
  dplyr::select(
    partnerISO,
    qty,
    long, lat
  ) |>
  na.omit()

start_coords <- capitals |>
  dplyr::filter(
    iso3 == "UKR"
  ) |>
  dplyr::group_by(iso3) |>
  dplyr::slice(
    rep(
      1:max(nrow(end_coords)
      ),
      each = max(nrow(end_coords)
      )
    )
  ) |>
  dplyr::ungroup() |>
  dplyr::select(long, lat)

start_coords$linestring_id <-
  end_coords$linestring_id <-
  seq_len(
    nrow(
      start_coords
    )
  )

wheat_lines_sf <- sfheaders::sf_linestring(
  dplyr::bind_rows(
    start_coords,
    end_coords
  ) |>
    dplyr::arrange(
      linestring_id
    ),
  x = "long",
  y = "lat",
  linestring_id = "linestring_id"
) |>
  sf::st_set_crs(4326)

wheat_lines_sf <- cbind(
  wheat_lines_sf,
  end_coords[,
             c("partnerISO", "qty")
  ]
)

# 6. WORLD SHAPEFILE
world_shp <- giscoR::gisco_get_countries(
  resolution = "10"
) |>
  subset(
    NAME_ENGL != "Antarctica"
  )

# 7. MAP WITH MODIFIED COLORS
crs_robinson <- "+proj=robin +lon_0=0w"

wheat_points_sf <- end_coords |>
  dplyr::group_by(partnerISO) |>
  dplyr::arrange(
    dplyr::desc(qty)
  ) |>
  dplyr::ungroup() |>
  sf::st_as_sf(
    coords = c("long", "lat"),
    crs = 4326
  )

# Definindo uma nova paleta de cores
cols <- c(
  "#88C0D0",  # Azul suave
  "#A3BE8C",  # Verde suave
  "#5E81AC"   # Azul mais escuro
)

p3 <- ggplot() +
  geom_sf(
    data = world_shp,
    fill = "grey30",     # Fundo do mapa
    color = "grey60",
    size = .2
  ) +
  geom_sf(
    data = wheat_lines_sf,
    aes(
      size = qty / 1000000,
      alpha = qty / 1000000,
      fill = partnerISO,
      color = partnerISO
    )  
  ) +
  scale_size(
    name = "thousands of tonnes",
    range = c(.2, 1.5)
  ) +
  scale_alpha(
    range = c(.3, 1)     # Ajustando a transparência para maior contraste
  ) +
  scale_color_manual(
    name = "",
    values = cols
  ) +
  scale_fill_manual(
    name = "",
    values = cols
  ) +
  coord_sf(crs = crs_robinson) +
  guides(
    alpha = "none",
    color = "none",
    fill = "none",
    size = guide_legend(
      override.aes = list(
        fill = NULL,
        alpha = .85,
        color = "white"
      ),
      direction = "horizontal",
      keyheight = unit(1.5, "mm"),
      keywidth = unit(15, "mm"),
      title.position = "top",
      title.hjust = .5,
      label.hjust = .5,
      label.position = "top",
      nrow = 1,
      byrow = T
    )
  ) +
  labs(
    x = "",
    y = "",
    subtitle = "",
    title = "Wheat imports from Ukraine in 2022",
    caption = "United Nations. 2023. UN comtrade\nhttp://comtrade.un.org"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(
      fill = "grey30",  # Fundo mais suave
      color = NA
    ),
    panel.background = element_rect(
      fill = "grey30",
      color = NA
    ),
    legend.background = element_rect(
      fill = "grey30",
      color = NA
    ),
    legend.position = c(.55, 0),
    plot.title = element_text(
      size = 22,
      color = "#88C0D0",  # Azul suave para o título
      hjust = .5, vjust = 1
    ),
    plot.caption = element_text(
      size = 8,
      color = "grey80",
      hjust = .15, vjust = 0
    ),
    legend.title = element_text(
      size = 10,
      color = "white"
    ),
    legend.text = element_text(
      size = 9,
      color = "white"
    ),
    plot.margin = unit(
      c(t = 1, r = -2, b = .5, l = -2), "lines"
    )
  )

p3

ggsave(
  "multiple-export_wheat.png",
  width = 10, h = 6, dpi = 600,
  device = "png", bg = "grey30", p3
)
