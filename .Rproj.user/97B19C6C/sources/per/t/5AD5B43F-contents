# Instalar pacotes se necessário ---------------------------------------

if (!require("leafsync")) install.packages("leafsync", dependencies = TRUE)
if (!require("leaflet")) install.packages("leaflet", dependencies = TRUE)
if (!require("tidyverse")) install.packages("tidyverse", dependencies = TRUE)
if (!require("sf")) install.packages("sf", dependencies = TRUE)
if (!require("rnaturalearth")) install.packages("rnaturalearth", dependencies = TRUE)
if (!require("countrycode")) install.packages("countrycode", dependencies = TRUE)

# Carregar pacotes -----------------------------------------------------

library("tidyverse")
library("sf")
library("rnaturalearth")
library("countrycode")
library("leaflet")
library("leafsync")

# Obter dados do mundo ------------------------------------------------

world <- ne_countries(scale = "small", returnclass = "sf")

# Ler dados de James Bond ---------------------------------------------

data_raw <- read_csv("https://raw.githubusercontent.com/FelixAnalytix/Youtube/master/data/jamesbond.csv")

# Definir anos e mapear filmes para anos
years <- 2020:2023
film_year_map <- c("Casino Royale" = 2020, "Quantum of Solace" = 2021, 
                   "Skyfall" = 2022, "Spectre" = 2023)

# Criar um dataframe para valores de transação
transactions_data <- data.frame(
  Country = unique(world$name),
  Year_2020 = rep(0, length(unique(world$name))),
  Year_2021 = rep(0, length(unique(world$name))),
  Year_2022 = rep(0, length(unique(world$name))),
  Year_2023 = rep(0, length(unique(world$name)))
)

# Países visitados em cada ano
visited_countries_by_year <- list(
  `2020` = c("United Kingdom", "Italy", "France"),
  `2021` = c("United Kingdom", "Italy", "France", "Spain", "Sweden"),
  `2022` = c("United Kingdom", "Italy", "France", "Spain", "Sweden", "Belgium", "Norway"),
  `2023` = c("United Kingdom", "Italy", "France", "Spain", "Sweden", "Belgium", "Norway", "Canada", "Brazil", "Japan")
)

# Atribuir valores de transação para os países visitados
for (year in years) {
  year_col <- paste0("Year_", year)
  
  for (country in visited_countries_by_year[[as.character(year)]]) {
    transactions_data[transactions_data$Country == country, year_col] <- 
      runif(1, 100000, 500000)  # Atribuir um valor aleatório
  }
}

# Criar uma paleta de cores baseada nos valores de transação com verde
color_palettes <- list(
  colorNumeric(palette = "Greens", domain = transactions_data$Year_2020),
  colorNumeric(palette = "Greens", domain = transactions_data$Year_2021),
  colorNumeric(palette = "Greens", domain = transactions_data$Year_2022),
  colorNumeric(palette = "Greens", domain = transactions_data$Year_2023)
)

# Função para criar mapas individuais com transações -------------------

create_map <- function(year) {
  year_col <- paste0("Year_", year)
  
  leaflet() %>%
    addProviderTiles("CartoDB.Positron") %>%
    addPolygons(data = world, 
                fillColor = ~color_palettes[[year - 2019]](transactions_data[match(world$name, transactions_data$Country), year_col]), 
                color = "darkgrey", weight = 1, opacity = 1, fillOpacity = 0.7, 
                highlightOptions = highlightOptions(weight = 2, color = "white", fillOpacity = 0.7), 
                label = ~paste(name, ": $", 
                               round(transactions_data[match(name, transactions_data$Country), year_col], 2), 
                               sep = ""),
                popup = ~ifelse(transactions_data[match(name, transactions_data$Country), year_col] > 0,
                                paste(name, "<br>Transaction Value: $", 
                                      round(transactions_data[match(name, transactions_data$Country), year_col], 2), sep = ""),
                                paste(name, "<br>No Transactions", sep = ""))) %>%
    addLabelOnlyMarkers(lng = -20, lat = 75, 
                        label = paste("Year:", year), 
                        labelOptions = labelOptions(noHide = TRUE, direction = "top", style = list("font-weight" = "bold", "font-size" = "16px")))
}

# Criar mapas individuais para cada ano --------------------------------

map_2020 <- create_map(2020)
map_2021 <- create_map(2021)
map_2022 <- create_map(2022)
map_2023 <- create_map(2023)

# Usar leafsync para criar múltiplos mapas sincronizados ---------------

sync(map_2020, map_2021, map_2022, map_2023)
